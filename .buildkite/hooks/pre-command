#!/usr/bin/env bash
##  This script prepares the secret context
##
##  NOTE: *_SECRET or *_TOKEN env variables are masked, hence if you'd like to avoid any
##        surprises please use the suffix _SECRET or _TOKEN for those values that contain
##        any sensitive data. Buildkite can mask those values automatically

set -eo pipefail

# Upload should not do much with the pre-command.
if [[ "$BUILDKITE_COMMAND" =~ .*"upload".* ]]; then
  echo "Skipped pre-command when running the Upload pipeline"
  exit 0
fi

# To help with testing the GPG signing
BUILDKITE_TOKEN_SECRET=$(vault kv get -field=buildkite_token kv/ci-shared/observability-ci/buildkite-read-build-access)
export BUILDKITE_TOKEN_SECRET

set +x
set +e
echo "~~~ Install nvm"
touch ~/.zshrc  #Â See https://github.com/nvm-sh/nvm?tab=readme-ov-file#troubleshooting-on-macos
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash

set -e
echo "~~~ Load nvm"
export NVM_DIR="$HOME/.nvm"
if [ -s "$NVM_DIR/nvm.sh" ] ; then
  source "$NVM_DIR/nvm.sh" || true
fi

echo "~~~ Debug shell"
echo "My current shell is $SHELL ($0)"
ls -ltra $HOME
cat ~/.zshrc || true
